/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package contacttracing;

import java.awt.Toolkit;
import java.sql.Connection;
import java.io.Serializable;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.text.*;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Alessandro Palumbo
 */
public class NewPresence extends javax.swing.JFrame {
    DefaultTableModel model;
    
     /**
     * Creates new form NewPresence
     */
    
    public NewPresence() {
        initComponents();
        ViewLoc();
        ViewPatient();
        setIcon();
        jYes.setSelected(true);
    }
    
    private void ViewLoc(){
    
       PreparedStatement st;
       Connection conn;
       ResultSet rs;
       String query = " SELECT idL,City,Street,s_Number,l_Type,p_Code FROM Loc";
       model = (DefaultTableModel) jLocT.getModel();
       model.setRowCount(0);
       try {
            conn = Database.getDefaultConnection();
              st = conn.prepareStatement(query);
              rs= st.executeQuery();
           
            while(rs.next()){ 
               String idl =rs.getString(1);
               String city =rs.getString(2);
               String str = rs.getString(3);
               String sn = rs.getString(4);
               String lt = rs.getString(5);
               String pc = rs.getString(6);
               model.addRow(new Object[]{idl,city,str,sn,lt,pc});
                
            }
            st.close();
        } catch (SQLException ex) {
          Logger.getLogger(newTest.class.getName()).log(Level.SEVERE, null, ex);
        }      
   }
    
    private void ViewPatient(){
    
       PreparedStatement st;
       Connection conn;
       ResultSet rs;
       String query = " SELECT idP,p_Name,p_Surname FROM Patient";
       model = (DefaultTableModel) jPatientTable.getModel();
       model.setRowCount(0);
      //model.fireTableDataChanged();
        try {
            conn = Database.getDefaultConnection();
              st = conn.prepareStatement(query);
              rs= st.executeQuery();
           
            while(rs.next()){ 
               String id =rs.getString(1);
               String name = rs.getString(2);
               String sname = rs.getString(3);
               model.addRow(new Object[]{id,name,sname});
                
            }
            st.close();
        } catch (SQLException ex) {
          Logger.getLogger(newTest.class.getName()).log(Level.SEVERE, null, ex);
        }      
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLocTable = new javax.swing.JScrollPane();
        jLocT = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPatientTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        jLabel4 = new javax.swing.JLabel();
        timePicker1 = new com.github.lgooddatepicker.components.TimePicker();
        jLabel5 = new javax.swing.JLabel();
        timePicker2 = new com.github.lgooddatepicker.components.TimePicker();
        jLabel6 = new javax.swing.JLabel();
        jYes = new javax.swing.JRadioButton();
        jNo = new javax.swing.JRadioButton();
        jInsert = new javax.swing.JButton();
        jDelete = new javax.swing.JButton();
        jViewP = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLocT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "idL", "Citta", "Via", "N", "Tipo", "CAP"
            }
        ));
        jLocTable.setViewportView(jLocT);

        jPatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "idP", "Nome", "Cognome", "Data N"
            }
        ));
        jScrollPane2.setViewportView(jPatientTable);

        jLabel1.setText("LUOGO");
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel2.setText("PAZIENTE");
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel3.setText("Il paziente dichiara di essere stato presente nel luogo selezionato in data ");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel4.setText("dalle ore");
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel5.setText("alle ore");
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel6.setText("Il paziente indossava il dispositivo di protezione delle vie respiratorie?");
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        buttonGroup1.add(jYes);
        jYes.setText("Si");

        buttonGroup1.add(jNo);
        jNo.setText("No");

        jInsert.setText("Inserisci");
        jInsert.setBackground(new java.awt.Color(0, 102, 153));
        jInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInsertActionPerformed(evt);
            }
        });

        jDelete.setText("Annulla");
        jDelete.setBackground(new java.awt.Color(204, 0, 0));
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });

        jViewP.setText("Visualizza Presenze");
        jViewP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jViewPActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Info");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Logoff");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLocTable, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jYes)
                                .addGap(18, 18, 18)
                                .addComponent(jNo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jInsert)
                                .addGap(27, 27, 27)
                                .addComponent(jDelete)
                                .addGap(37, 37, 37)
                                .addComponent(jViewP))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(timePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(timePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLocTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(timePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(timePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jYes)
                    .addComponent(jNo)
                    .addComponent(jInsert)
                    .addComponent(jDelete)
                    .addComponent(jViewP))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteActionPerformed
       MainCT an;
       an = new MainCT(1);
       an.setVisible(true); 
       dispose();
    }//GEN-LAST:event_jDeleteActionPerformed

    private void jInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInsertActionPerformed
        int selected;
        boolean n = true;
        if(jYes.isSelected())
            selected = 1;
        else
            selected = 0;
        String date = datePicker1.getDate().format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
        String ts = timePicker1.getText();
        String te = timePicker2.getText();
        String t_s = new String(date + " " + ts + ":00" );
        String t_e = new String(date + " " + te + ":00" );
        Timestamp ts1 = Timestamp.valueOf(t_s);
        Timestamp ts2 = Timestamp.valueOf(t_e);
        int locSelectedcell = 0;
        int patientSelectedcell = 0;
        
        try{
            locSelectedcell = Integer.parseInt(jLocT.getValueAt(jLocT.getSelectedRow(),0).toString());
            patientSelectedcell = Integer.parseInt(jPatientTable.getValueAt(jPatientTable.getSelectedRow(),0).toString());
        }
        catch(ArrayIndexOutOfBoundsException exc){
            JOptionPane.showMessageDialog(null, "Errore. Selezionare entrambi i campi Luogo e Paziente.");
            n = false;
        }

        if(n) {
            PreparedStatement st;
            Connection conn;
            String query = "INSERT INTO Presence(time_Start,time_End,p_Mask,id_PRP,id_PRL) VALUES (?,?,?,?,?)";
        try {
           conn = Database.getDefaultConnection();
           st = conn.prepareStatement(query);
           st.setTimestamp(1,ts1);
           st.setTimestamp(2,ts2);
           st.setInt(3,selected);
           st.setInt(4,patientSelectedcell);
           st.setInt(5,locSelectedcell);
           if(st.executeUpdate()>0){ 
            JOptionPane.showMessageDialog(null, "Nuova occorrenza aggiunta correttamente.");
         }
             st.close();
             } catch (SQLException ex) {
           Logger.getLogger(newPatient.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
    }//GEN-LAST:event_jInsertActionPerformed

    private void jViewPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jViewPActionPerformed
        ViewPresence vp;
        vp = new ViewPresence();
        vp.setVisible(true);
        dispose();
    }//GEN-LAST:event_jViewPActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JOptionPane.showMessageDialog(this,
            "Contact Tracer\nApplicativo Java per emulare il Tracking del virus Sars-CoV-2"
            + "\nUniversità di Napoli Federico II"
            + "\n\nSviluppatore: Alessandro Palumbo N86001990 ",
            "Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("iconcov.jpg")));
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private javax.swing.JButton jDelete;
    private javax.swing.JButton jInsert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTable jLocT;
    private javax.swing.JScrollPane jLocTable;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JRadioButton jNo;
    private javax.swing.JTable jPatientTable;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jViewP;
    private javax.swing.JRadioButton jYes;
    private com.github.lgooddatepicker.components.TimePicker timePicker1;
    private com.github.lgooddatepicker.components.TimePicker timePicker2;
    // End of variables declaration//GEN-END:variables
}
