/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package contacttracing;

import java.awt.Toolkit;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Alessandro Palumbo
 */
public class newLoc extends javax.swing.JFrame {
    DefaultTableModel model;
    /**
     * Creates new form newLoc
     */
    public newLoc() {
        initComponents();
        ViewLoc();
        setIcon();
    }
    
    private void ViewLoc(){
    
       PreparedStatement st;
       Connection conn;
       ResultSet rs;
       String query = " SELECT * FROM Loc";
       model = (DefaultTableModel) jLocTable.getModel();
       model.setRowCount(0);
        try {
            conn = Database.getDefaultConnection();
              st = conn.prepareStatement(query);
              rs= st.executeQuery();
           
            while(rs.next()){ 
               String idL = rs.getString(1);
               String city =rs.getString(2);
               String str = rs.getString(3);
               String sn = rs.getString(4);
               String lt = rs.getString(5);
               String pc = rs.getString(6);
               String nat = rs.getString(7);
               model.addRow(new Object[]{idL,city,str,sn,lt,pc,nat});
                
            }
            st.close();
        } catch (SQLException ex) {
          Logger.getLogger(newLoc.class.getName()).log(Level.SEVERE, null, ex);
        }      
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jLocTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCity = new javax.swing.JTextField();
        jStreet = new javax.swing.JTextField();
        jN = new javax.swing.JTextField();
        jCAP = new javax.swing.JTextField();
        jBack = new javax.swing.JButton();
        jUpdate = new javax.swing.JToggleButton();
        jType = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jInsert = new javax.swing.JButton();
        jDelete = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLocTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "idL", "Citta", "Via", "N", "Tipo", "CAP", "Nazione"
            }
        ));
        jScrollPane1.setViewportView(jLocTable);

        jLabel1.setText("Citta");

        jLabel2.setText("Via");

        jLabel3.setText("N");

        jLabel4.setText("CAP");

        jCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCityActionPerformed(evt);
            }
        });

        jStreet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStreetActionPerformed(evt);
            }
        });

        jN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNActionPerformed(evt);
            }
        });

        jCAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCAPActionPerformed(evt);
            }
        });

        jBack.setBackground(new java.awt.Color(204, 0, 0));
        jBack.setText("Annulla");
        jBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackActionPerformed(evt);
            }
        });

        jUpdate.setBackground(new java.awt.Color(0, 51, 0));
        jUpdate.setText("Aggiorna");
        jUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateActionPerformed(evt);
            }
        });

        jType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Indoor", "Outdoor" }));
        jType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTypeActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo");

        jInsert.setBackground(new java.awt.Color(0, 102, 153));
        jInsert.setText("Inserisci");
        jInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInsertActionPerformed(evt);
            }
        });

        jDelete.setText("Elimina");
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Info");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Logoff");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jCity, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(jStreet))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jN)
                    .addComponent(jCAP, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jType, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jInsert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jUpdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBack, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBack))
                .addGap(3, 3, 3)
                .addComponent(jUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCAP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jInsert)
                    .addComponent(jDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCityActionPerformed

    private void jStreetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStreetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jStreetActionPerformed

    private void jNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNActionPerformed

    private void jCAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCAPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCAPActionPerformed

    private void jTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTypeActionPerformed

    private void jInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInsertActionPerformed
       String city = jCity.getText();       
       String street = jStreet.getText();
       int nstreet = Integer.parseInt(jN.getText());
       int ncap = Integer.parseInt(jCAP.getText());
       String nation = "Italia";
       String typel = jType.getSelectedItem().toString();
       
       
       if(street.equals("") || city.equals("") || jN.getText().equals("") || jCAP.getText().equals("")){
           JOptionPane.showMessageDialog(null, "Errore. Compilare tutti i campi.");
       }
        else {
            PreparedStatement st;
            Connection conn;
            String query = "INSERT INTO Loc(City,Street,s_Number,l_Type,p_Code,Nation) VALUES (?,?,?,?,?,?)";
        try {
           conn = Database.getDefaultConnection();
           st = conn.prepareStatement(query);
           st.setString(1,city);
           st.setString(2,street);
           st.setInt(3,nstreet);
           st.setString(4,typel);
           st.setInt(5,ncap);
           st.setString(6,nation);
           if(st.executeUpdate()>0){ 
            JOptionPane.showMessageDialog(null, "Luogo inserito correttamente.");
            ViewLoc();
         }
             st.close();
             } catch (SQLException ex) {
           Logger.getLogger(newLoc.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jInsertActionPerformed

    private void jUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateActionPerformed
        int idl = 0;
        boolean n = true;
        String city = jCity.getText();       
        String street = jStreet.getText();
        int nstreet = Integer.parseInt(jN.getText());
        int ncap = Integer.parseInt(jCAP.getText());
        String typel = jType.getSelectedItem().toString();
        
        try{
            idl = Integer.parseInt(jLocTable.getValueAt(jLocTable.getSelectedRow(),0).toString());
        }
        catch(ArrayIndexOutOfBoundsException exc){
            JOptionPane.showMessageDialog(null, "Errore. Selezionare la riga da aggiornare.");
            n = false;
        }
        
        if(n){
            if(street.equals("") || city.equals("")){
                JOptionPane.showMessageDialog(null, "Errore. Compilare tutti i campi");
       }
        else {
            PreparedStatement st;
            Connection conn;
            String query = "UPDATE Loc SET City=?,Street=?,s_Number=?,l_Type=?,p_Code=? WHERE idL=?";
        try {
           conn = Database.getDefaultConnection();
           st = conn.prepareStatement(query);
           st.setString(1,city);
           st.setString(2,street);
           st.setInt(3,nstreet);
           st.setString(4,typel);
           st.setInt(5,ncap);
           st.setInt(6,idl);
           if(st.executeUpdate()>0){ 
            JOptionPane.showMessageDialog(null, "Luogo aggiornato correttamente.");
            ViewLoc();
         }
             st.close();
             } catch (SQLException ex) {
           Logger.getLogger(newLoc.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
    }//GEN-LAST:event_jUpdateActionPerformed

    private void jBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackActionPerformed
       MainCT an;
       an = new MainCT(1);
       an.setVisible(true); 
       dispose();
    }//GEN-LAST:event_jBackActionPerformed

    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteActionPerformed
        int idl = 0;
        boolean n = true;
        try{
            idl = Integer.parseInt(jLocTable.getValueAt(jLocTable.getSelectedRow(),0).toString());
        }
        catch(ArrayIndexOutOfBoundsException exc){
            JOptionPane.showMessageDialog(null, "Errore. Selezionare la riga del luogo da eliminare.");
            n = false;
        }
        
        if(n){
            PreparedStatement st;
            Connection conn;
            String query = "DELETE FROM Loc WHERE idL=?";
        try {
           conn = Database.getDefaultConnection();
           st = conn.prepareStatement(query);
           st.setInt(1,idl);
           if(st.executeUpdate()>0){ 
            JOptionPane.showMessageDialog(null, "Luogo eliminato correttamente.");
            ViewLoc();
         }
             st.close();
             } catch (SQLException ex) {
           Logger.getLogger(newLoc.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jDeleteActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JOptionPane.showMessageDialog(this,
            "Contact Tracer\nApplicativo Java per emulare il Tracking del virus Sars-CoV-2"
            + "\nUniversità di Napoli Federico II"
            + "\n\nSviluppatore: Alessandro Palumbo N86001990 ",
            "Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("iconcov.jpg")));
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBack;
    private javax.swing.JTextField jCAP;
    private javax.swing.JTextField jCity;
    private javax.swing.JButton jDelete;
    private javax.swing.JButton jInsert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTable jLocTable;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JTextField jN;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jStreet;
    private javax.swing.JComboBox<String> jType;
    private javax.swing.JToggleButton jUpdate;
    // End of variables declaration//GEN-END:variables
}
